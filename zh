#!/bin/bash

hosts="ops/$3"
if [ -z "$3" ]; then
  hosts='ops/staging'
fi

# Helpers
separator () {
    echo '------------------------------------------------------------------------------'
}

print_hosts () {
    separator
    echo "Hosts:   $(basename $hosts)"
    separator
}

# Commands
case "$1" in
init)
    brew install https://raw.githubusercontent.com/Homebrew/homebrew/bda8d64e0e9011aab1612868eac2f709e631c503/Library/Formula/haskell-stack.rb
    stack setup
    ;;
lint)
    stack exec hlint src
    ;;
format)
    files=$(git ls-files | grep --invert 'vendor/' | grep '.hs$')
    stylish-haskell --inplace $files
    ;;
ops)
    case "$2" in
    bootstrap)
        separator
        echo 'WARNING: Running ./zh ops bootstrap more than once will fail'
        echo '         as `root` user will no longer have password access to '
        echo '         the server.'
        separator
        echo "Hosts:   $(basename $hosts)"
        separator
        echo 'Enter `root` SSH password:'
        ansible-playbook --inventory-file "$hosts" \
            ops/user.yml --user root --ask-pass \
            --extra-vars "sudoers=y username=admin ansible_become_pass='' variable_hosts=${4:-all}"
        ;;
    ping)
        print_hosts
        ansible --inventory-file "$hosts" all -m ping
        ;;
    setup)
        ansible-galaxy install -r ops/requirements.yml
    ;;
    setup-admin-server)
        ansible-playbook -v --inventory-file ops/admin \
            --ask-become --ask-vault-pass \
            ops/admin.yml
        ;;
    setup-database-server)
        print_hosts

        ansible-playbook -v --inventory-file "$hosts" \
            --ask-vault-pass \
            ops/database.yml
        ;;
    setup-web-server)
        print_hosts

        echo 'Enter `admin` user password:'
        ansible-playbook -v --inventory-file "$hosts" \
            --ask-become --ask-vault-pass \
            ops/web.yml
        ;;
    *)
        echo "Unknown command: $0 $@. Try $0 $1 \
bootstrap|ping|setup|setup-admin-server|setup-database-server|setup-web-server"
        exit 1
    esac
    ;;
run)
    stack build --ghc-options='' \
                --file-watch \
                --exec ./scripts/run-development.sh
    ;;
test)
    createdb zoomhub_test
    psql --dbname=zoomhub_test --file=./scripts/schema-7-pg.sql
    # TODO: Figure out how to preserve schema with `pgloader`:
    pgloader \
      ./data/zoomhub-development.sqlite3 \
      postgresql://$(whoami):@localhost/zoomhub_test

    stack test

    dropdb zoomhub_test
    ;;
*)
    echo "Unknown command: $0 $@. Try: $0 format|init|lint|ops|run|test"
    ;;
esac
